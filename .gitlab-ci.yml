variables:
  GIT_STRATEGY: fetch
  PACKAGE_NAME: PyAnalysisTools
  CI_WEBSITE_DIR: "docs/build"
  DFS_WEBSITE_NAME: "pyanalysistoolsdocs"
  DFS_WEBSITE_USERNAME: morgens

stages:
  - docker
  - test
  - docs
  - deploy

build_latest_image:
  stage: docker
  image: atlas/analysisbase:latest
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive
    - source /home/atlas/release_setup.sh
    - which python
    - which pip
    - sudo rm -rf /usr/lib/python2.7/site-packages/dateutil/
    - pip install --user -r requirements.txt
    - export PATH=$PATH:/home/atlas/.local/bin
  variables:
    TO: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  except:
    - tags
  tags:
    - docker-image-build
  script:
    - ls #ignore


build_docs:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  #image: atlas/analysisbase:latest
  stage: docs
  before_script:
    - source /home/atlas/release_setup.sh
    #- which python
    #- which pip
    #- pip install sphinx mock future oyaml dill --user
    #- export PATH=/home/atlas/.local/bin:$PATH
  script:
    - ls
    - sphinx-build docs/source/ docs/build/
    - ls docs/build
  artifacts:
    paths:
      - docs/build
    
.deploy_template: &deploy_definition
  stage: deploy
  image: gitlab-registry.cern.ch/ci-tools/ci-web-deployer
  tags:
    - docker
  script:
    - SMB_PROTOCOL=smb3
    - deploy-dfs

deploy_production:
  variables:
  <<: *deploy_definition
  only:
    - master
  environment:
    name: production
    url: https://cern.ch/PyAnalysisToolsDocs

    
unittest:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  #image: atlas/analysisbase:latest
  stage: test
  coverage: '/^TOTAL\s+\d+\s+\d+\s+(\d+\%)$/'
  before_script:
    - source /home/atlas/release_setup.sh
#    - which python
#    - which pip
    - sudo rm -rf /usr/lib/python2.7/site-packages/dateutil/
#    - pip install nose --user
#    - pip install oyaml --user
#    - pip install sklearn --user
#    - pip install tabulate --user
#    - pip install coverage --user
#    - pip install nosedep --user
#    - pip install mock --user
#    - pip install pathos --user
#    - pip install future --user
#    - pip install pandas --user
#    - pip install root_numpy --user
#    - pip install matplotlib --user
    - export PATH=$PATH:/home/atlas/.local/bin
  script:
    - echo $SERVICE_PASS | kinit $CERN_USER
    - mkdir -p tests/unit/fixtures/files/
    - xrdcp -f root://eosuser.cern.ch//eos/user/m/morgens/analysis_files/fixtues/ntuple-311331_0.MC16d.root tests/unit/fixtures/files/
    - nosetests -w tests/unit --with-coverage --nologcapture --cover-package PyAnalysisTools

style_check:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  #image: atlas/analysisbase:latest
  stage: test
  before_script:
    - source /home/atlas/release_setup.sh
#    - which python
#    - which pip
#    - pip install --user flake8==3.5.0
    - export PATH=$PATH:/home/atlas/.local/bin
  script:
    - flake8 .
  allow_failure: true
